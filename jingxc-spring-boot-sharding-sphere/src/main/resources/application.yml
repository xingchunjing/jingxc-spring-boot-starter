server:
  port: 8089
spring:
  main:
    #  一个实体类对应三张表，覆盖，不然启动报错
    allow-bean-definition-overriding: true
  # Sharding-JDBC的配置
  shardingsphere:
    datasource:
      # 数据源（逻辑名字）
      names: m1
      # 配置数据源
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/test_demo_0?characterEncoding=utf8&useSSL=true&createDatabaseIfNotExist=true&serverTimezone=GMT&nullNamePatternMatchesAll=true
        username: root
        password: 100uu100UU
    # 分片的配置
    sharding:
      # 表的分片策略
      tables:
        # 逻辑表的名称
        t_order:
          # 数据节点配置，采用Groovy表达式
          actual-data-nodes: m1.t_order_$->{0..1}
          # 配置策略
          table-strategy:
            # 精确匹配
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_$->{order_id % 2}
          # 主键生成策略
          key-generator:
            # 主键
            column: id
            # 雪花算法
            type: SNOWFLAKE
    props:
      sql:
        # 日志显示具体的SQL
        show: true

logging:
  level:
    com.wang.test.demo: DEBUG

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.game.server.bean
  configuration:
    #在映射实体或者属性时，将数据库中表名和字段名中的下划线去掉，按照驼峰命名法映射 address_book ---> addressBook
    map-underscore-to-camel-case: true